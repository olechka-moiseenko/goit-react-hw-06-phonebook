{"version":3,"sources":["components/SearchContact/SearchContact.module.css","redux/slices/items.js","redux/slices/filter.js","redux/store/index.js","components/ContactForm/ContactForm.js","components/SearchContact/SearchContact.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addContact","state","action","payload","deleteContact","filter","item","id","actions","filterSlice","rootReducer","store","configureStore","reducer","devTools","process","ContactForm","dispatch","useDispatch","allContacts","useSelector","numberInputId","uuidv4","nameInputId","onSubmit","evt","preventDefault","some","contact","target","elements","inputName","value","alert","number","inputNumber","reset","className","s","form","label","input","autoComplete","type","pattern","title","required","btn","SearchContact","onChange","currentTarget","toLocaleLowerCase","ContactList","filteredContactList","includes","useEffect","setItem","stringify","contactList","map","user","contactitem","onClick","App","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba2efc40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SearchContact_title__1sIPZ\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: JSON.parse(localStorage.getItem(\"contactsList\")) ?? [],\n  reducers: {\n    addContact: (state, action) => [...state, action.payload],\n    deleteContact: (state, action) =>\n      state.filter((item) => item.id !== action.payload),\n  },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: \"\",\n  reducers: {\n    filter: (action) => action.payload,\n  },\n});\n\nexport const { filter } = filterSlice.actions;\nexport default filterSlice.reducer;\n","// import { createStore } from 'redux';\n// import { devToolsEnchancer } from 'redux-devtools-extension';\n// import { rootReducer } from '../reducers';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contactsSlice from \"../slices/items\";\nimport filterSlice from \"../slices/filter\";\n// const store = createStore(rootReducer, devToolsEnchancer());\nconst rootReducer = {\n  contactsSlice,\n  filterSlice,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\nexport default store;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/slices/items\";\nimport s from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const allContacts = useSelector((state) => state.contactsSlice);\n\n  const handleAddContact = (evt) => {\n    evt.preventDefault();\n\n    if (\n      allContacts.some(\n        (contact) => contact.name === evt.target.elements.inputName.value\n      )\n    ) {\n      alert(`${evt.target.elements.inputName.value} is already in contacts`);\n    } else {\n      dispatch(\n        addContact({\n          name: evt.target.elements.inputName.value,\n          number: evt.target.elements.inputNumber.value,\n          id: uuidv4(),\n        })\n      );\n    }\n\n    evt.target.reset();\n  };\n\n  const numberInputId = uuidv4();\n  const nameInputId = uuidv4();\n\n  return (\n    <form onSubmit={handleAddContact} className={s.form}>\n      <label className={s.label}>\n        <p>Name</p>\n        <input\n          className={s.input}\n          autoComplete=\"off\"\n          name=\"inputName\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameInputId}\n        />\n      </label>\n      <label className={s.label}>\n        <p>Number</p>\n        <input\n          className={s.input}\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"inputNumber\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={numberInputId}\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport s from \"./SearchContact.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"../../redux/slices/filter\";\n\nexport default function SearchContact() {\n  const dispatch = useDispatch();\n  return (\n    <label>\n      <title className={s.title}>Find contacts by name</title>\n      <input\n        type=\"text\"\n        onChange={(evt) =>\n          dispatch(filter(evt.currentTarget.value.toLocaleLowerCase()))\n        }\n      />\n    </label>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/slices/items\";\n\nexport default function ContactList() {\n  const allContacts = useSelector((state) => state.contactsSlice);\n  const filter = useSelector((state) => state.filterSlice);\n  const dispatch = useDispatch();\n\n  const filteredContactList = allContacts.filter((contact) =>\n    contact.name.toLocaleLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"contactsList\", JSON.stringify(allContacts));\n  }, [allContacts]);\n\n  return (\n    <ul className={s.contactList}>\n      {filteredContactList.map((user) => (\n        <li key={user.id} className={s.contactitem}>\n          <span>\n            {user.name} {user.number}\n          </span>\n          <button\n            type=\"button\"\n            className={s.btn}\n            onClick={() => dispatch(actions.deleteContact(user.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport SearchContact from \"./components/SearchContact/SearchContact\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport s from \"./App.module.css\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const allContacts = useSelector((state) => state.contactsSlice);\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      {allContacts.length !== 0 && <h2 className={s.title}>Contacts</h2>}\n      {allContacts.length !== 0 && <SearchContact />}\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Q37nz\",\"label\":\"ContactForm_label__3-eBp\",\"input\":\"ContactForm_input__3DYFH\",\"btn\":\"ContactForm_btn__3j-Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__kG4sl\",\"btn\":\"ContactList_btn__1T5Z2\",\"contactitem\":\"ContactList_contactitem__3kQXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1-G7z\",\"title\":\"App_title__3MsrM\"};"],"sourceRoot":""}